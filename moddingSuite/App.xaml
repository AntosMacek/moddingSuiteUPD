<Application
    x:Class="moddingSuite.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Extension="clr-namespace:moddingSuite.View.Extension"
    xmlns:ValueEditing="clr-namespace:moddingSuite.View.Ndfbin.ValueEditing"
    xmlns:edata="clr-namespace:moddingSuite.ViewModel.Edata">
    <!--  StartupUri="View/ManagerMainView.xaml"  -->
    <Application.Resources>
        <BitmapImage x:Key="AboutIcon" UriSource="View\Images\InfoTooltip_16x.png" />
        <BitmapImage x:Key="ExtractRawIcon" UriSource="View\Images\DisassemblyWindow_6536.png" />
        <BitmapImage x:Key="ExtractZipedPartIcon" UriSource="View\Images\zip-26.png" />
        <BitmapImage x:Key="OpenDetailsIcon" UriSource="View\Images\ExcelWorksheetView_11748.png" />
        <BitmapImage x:Key="OpenMovieIcon" UriSource="View\Images\play-26.png" />
        <BitmapImage x:Key="OpenDictionayIcon" UriSource="View\Images\AppearanceEditorPart_6014.png" />

        <BitmapImage x:Key="SaveIcon" UriSource="View\Images\Save_6530.png" />

        <BitmapImage x:Key="EmptyFilter" UriSource="View\Images\filter_16xLG.png" />
        <BitmapImage x:Key="FilledFilter" UriSource="View\Images\filled_filter-26.png" />

        <BitmapImage x:Key="OpenIcon" UriSource="View\Images\Open_6296.png" />

        <BitmapImage x:Key="PushPinIcon" UriSource="View\Images\pushpin_16xLG.png" />
        <BitmapImage x:Key="ViewChanges" UriSource="View\Images\View_Details-26.png" />

        <BitmapImage x:Key="ScriptIcon" UriSource="View\Images\google_code-26.png" />
        <BitmapImage x:Key="UnknownFileIcon" UriSource="View\Images\question-26.png" />
        <BitmapImage x:Key="PackageFileIcon" UriSource="View\Images\package-16.png" />
        <BitmapImage x:Key="MeshFileIcon" UriSource="View\Images\ASCube_16xLG.png" />

        <BitmapImage x:Key="CreateHashIcon" UriSource="View\Images\refresh_shield-26.png" />

        <BitmapImage x:Key="AddRowIcon" UriSource="View\Images\Add_Row-26.png" />
        <BitmapImage x:Key="DeleteRowIcon" UriSource="View\Images\Delete_Row-26.png" />
        <BitmapImage x:Key="AddPropIcon" UriSource="View\Images\add_property-26.png" />
        <BitmapImage x:Key="DeletePropIcon" UriSource="View\Images\delete_property-26.png" />
        <BitmapImage x:Key="InsertModeIcon" UriSource="View\Images\Generic_Sorting2-26.png" />


        <BitmapImage x:Key="GplIcon" UriSource="View\Images\gplv3-127x51.png" />

        <BitmapImage x:Key="TextureIcon" UriSource="View\Images\resource_16xLG.png" />
        <BitmapImage x:Key="SoundIcon" UriSource="View\Images\Recording_16xLG.png" />

        <BitmapImage x:Key="ExportIcon" UriSource="View\Images\BookmarkNext_2389.png" />
        <BitmapImage x:Key="ImportIcon" UriSource="View\Images\BookmarkPrevious_2391.png" />

        <BitmapImage x:Key="SearchIcon" UriSource="View\Images\google_web_search-26.png" />
        <BitmapImage x:Key="ErrorIcon" UriSource="View\Images\error-32.png" />
        <BitmapImage x:Key="DonateIcon" UriSource="View\Images\donate.gif" />

        <BitmapImage x:Key="CopyIcon" UriSource="View\Images\copy-26.png" />

        <BitmapImage x:Key="ScenarioIcon" UriSource="View\Images\puzzle-26.png" />
        <BitmapImage x:Key="ZoneIcon" UriSource="View\Images\geometry-26.png" />


        <BitmapImage x:Key="ExceptionArt" UriSource="View\Images\exception.png" />


        <BitmapImage x:Key="FolderIcon" UriSource="View\Images\folder-26.png" />
        <BitmapImage x:Key="VsFolderIcon" UriSource="View\Images\folder_Closed_16xLG.png" />
        <BitmapImage x:Key="VsFolderIconOpen" UriSource="View\Images\folder_Open_16xLG.png" />
        <BitmapImage x:Key="GenericFileIcon" UriSource="View\Images\news-26.png" />

        <BitmapImage x:Key="OpenEdataPackageIcon" UriSource="View\Images\UnloadedProject_8303.png" />

        <!--  Thanks to Mitchellnolte!!!  -->
        <ImageBrush x:Key="SplashScreenArt" ImageSource="View\Images\about.jpg" />


        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Extension:BoolToVisibilityCollapsedConverter x:Key="BoolToVisibilityCollapsedConverter" />

        <Extension:LocalisationHashValueConverter x:Key="LocalisationHashValueConverter" />
        <Extension:Color32ValueConverter x:Key="Color32ValueConverter" />

        <Extension:ColorToBrushConverter x:Key="ColorToBrushConverter" />

        <Extension:ByteToKiloByteConverter x:Key="ByteToKiloByteConverter" />


        <Extension:EdataFileTypeToImageConverter x:Key="EdataFileTypeToImageConverter" />

        <Extension:EditingControlDataTemplateSelector x:Key="editingControlTemplateSelector" />

        <DataTemplate x:Key="FloatEditingTemplate">
            <ValueEditing:FloatEditingTemplate />
        </DataTemplate>
        <DataTemplate x:Key="UInt32EditingTemplate">
            <ValueEditing:UInt32EditingTemaplte />
        </DataTemplate>
        <DataTemplate x:Key="Int32EditingTemplate">
            <ValueEditing:Int32EditingTemplate />
        </DataTemplate>
        <DataTemplate x:Key="GuidEditingTemplate">
            <ValueEditing:GuidEditingTemplate />
        </DataTemplate>
        <DataTemplate x:Key="BooleanEditingTemplate">
            <ValueEditing:BooleanEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="ObjectReferenceEditingTemplate">
            <ValueEditing:ObjectReferenceEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="MapEditingTemplate">
            <ValueEditing:MapEditingTemplate />
        </DataTemplate>


        <DataTemplate x:Key="StringTableEditingTemplate">
            <ValueEditing:StringTableEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="TransTableReferenceEditingTemplate">
            <ValueEditing:TransTableReferenceEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="LocaleHashEditingTemplate">
            <ValueEditing:LocaleHashEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="ColorPickerEditingTemplate">
            <ValueEditing:ColorPickerEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="BlobEditingTemplate">
            <ValueEditing:BlobEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="FloatPairEditingTemplate">
            <ValueEditing:FloatPairEditingTemplate />
        </DataTemplate>

        <DataTemplate x:Key="VectorEditingTemplate">
            <ValueEditing:VectorEditingTemplate />
        </DataTemplate>

        <Style TargetType="Image">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--    -->

        <SolidColorBrush x:Key="AboutBackground">
            <SolidColorBrush.Color>
                <Color
                    A="40"
                    B="255"
                    G="255"
                    R="255" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="ToolBarBackground">
            <SolidColorBrush.Color>
                <Color
                    A="255"
                    B="242"
                    G="239"
                    R="239" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="Foreground">
            <SolidColorBrush.Color>
                <Color
                    A="255"
                    B="30"
                    G="30"
                    R="30" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="DataGridCloumnHeaderBackgroundHover">
            <SolidColorBrush.Color>
                <Color
                    A="255"
                    B="254"
                    G="254"
                    R="254" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="DataGridCloumnHeaderBackground">
            <SolidColorBrush.Color>
                <Color
                    A="255"
                    B="246"
                    G="246"
                    R="246" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="DataGridCloumnHeaderBorder">
            <SolidColorBrush.Color>
                <Color
                    A="255"
                    B="219"
                    G="206"
                    R="204" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="ToolBarBorder">
            <SolidColorBrush.Color>
                <Color
                    A="255"
                    B="204"
                    G="122"
                    R="0" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="ToolBarButtonHover">
            <SolidColorBrush.Color>
                <Color
                    A="255"
                    B="234"
                    G="151"
                    R="28" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <SolidColorBrush x:Key="ToolBarButtonPressed">
            <SolidColorBrush.Color>
                <Color
                    A="255"
                    B="204"
                    G="122"
                    R="0" />
            </SolidColorBrush.Color>
        </SolidColorBrush>

        <Style x:Key="Vs2010StyleToolBar" TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{StaticResource ToolBarBackground}" />
            <Setter Property="Margin" Value="0,0,0,5" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid
                            x:Name="Grid"
                            Margin="0"
                            SnapsToDevicePixels="true">
                            <Border
                                x:Name="MainPanelBorder"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{StaticResource ToolBarBorder}"
                                BorderThickness="0,0,0,2">
                                <ToolBarPanel
                                    x:Name="PART_ToolBarPanel"
                                    Margin="0"
                                    IsItemsHost="true"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition Property="IsChecked" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsKeyboardFocused" Value="true" />
                                    <Condition Property="IsChecked" Value="true" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                            </MultiTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="4" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">

                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">

                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
            <Setter Property="MinWidth" Value="1" />
            <Setter Property="MinHeight" Value="1" />
            <Setter Property="Margin" Value="2,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="4,4,4,4" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{StaticResource ToolBarBackground}" />
            <Setter Property="Background" Value="White" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid
                            ClipToBounds="true"
                            KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{StaticResource ToolBarBorder}" BorderThickness="0,0,0,2">
                                <TabPanel
                                    x:Name="HeaderPanel"
                                    Margin="0"
                                    Panel.ZIndex="1"
                                    IsItemsHost="true"
                                    KeyboardNavigation.TabIndex="1" />
                            </Border>
                            <Border
                                x:Name="ContentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter
                                    x:Name="PART_SelectedContentHost"
                                    Margin="{TemplateBinding Padding}"
                                    ContentSource="SelectedContent"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Padding" Value="5,3,5,3" />
            <Setter Property="Background" Value="{StaticResource ToolBarBackground}" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Border
                                x:Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0">
                                <ContentPresenter
                                    x:Name="Content"
                                    HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                    VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonHover}" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ToolBarButtonPressed}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <!--
            =================================================================
            TreeViewItem
            ==================================================================
        -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid
                            Width="15"
                            Height="13"
                            Background="Transparent">
                            <Path
                                x:Name="ExpandPath"
                                Margin="1,1,1,1"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Data="M 4 0 L 8 4 L 4 8 Z"
                                Fill="{StaticResource GlyphBrush}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="Data" Value="M 0 4 L 8 4 L 4 8 Z" />
                            </Trigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                <Setter TargetName="ExpandPath" Property="Fill" Value="White" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle
                                Margin="0,0,0,0"
                                Opacity="0"
                                Stroke="Black"
                                StrokeDashArray="1 2"
                                StrokeThickness="5" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="1,0,0,0" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <Extension:LeftMarginMultiplierConverter x:Key="lengthConverter" Length="19" />
                        </ControlTemplate.Resources>
                        <StackPanel>
                            <Border
                                Name="Bd"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="19" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton
                                        x:Name="Expander"
                                        ClickMode="Press"
                                        IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                        Style="{StaticResource ExpandCollapseToggleStyle}" />

                                    <ContentPresenter
                                        x:Name="PART_Header"
                                        Grid.Column="1"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        ContentSource="Header" />
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ToolBarButtonPressed}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ToolBarButtonPressed}" />
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate DataType="{x:Type edata:DirectoryViewModel}" ItemsSource="{Binding Items}">
            <HierarchicalDataTemplate.Resources>
                <ContextMenu x:Key="DirectoryContextMenu">
                    <MenuItem Command="{Binding OpenInFileExplorerCommand}" Header="Open folder in File explorer">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource OpenIcon}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </HierarchicalDataTemplate.Resources>
            <Grid ContextMenu="{StaticResource DirectoryContextMenu}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image
                    x:Name="folderIcon"
                    Height="16"
                    Source="{StaticResource VsFolderIcon}" />
                <TextBlock
                    Grid.Column="1"
                    Margin="5,0,0,0"
                    Text="{Binding Name}" />
            </Grid>
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                    <Setter TargetName="folderIcon" Property="Source" Value="{StaticResource VsFolderIconOpen}" />
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
    </Application.Resources>
</Application>